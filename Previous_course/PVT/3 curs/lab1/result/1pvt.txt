В ринг цикл от 0 до commsize-1 потому что, нужно через каждый процесс должны пройти все сообщения

mpi_Waitall - Функция блокирует работу, пока все операции обмена, связанные с активными дескрипторами в списке, не завершатся, и возвращает статус всех операций 
ждет завершения сообщения приема отправки
оиждает процессы. Блокирует выполнение текущего процесса, пока 2 операции не закончатся

массив запросов(реквестов) такой длины потому что мы отправляем сообщение каждому процессу(кроме самого себя), каждый процесс отправляет всем
двойка тк 2 операции, отправляем каждому и принимаем от каждого. -1 тк нулевой процесс сам себе не отправляет и не принимает

memcpy капируем массив(первый) из бувера отправки в буфер приема
В любом случае, мемцпу сработает гораздо быстрее. просто копируем

mpi probe 
Ищет возможность получить сообщение
Операция MPI_PROBE позволяют проверить входные сообщения без их реального приема. Пользователь затем может решить, как ему принимать эти сообщения, 
основываясь на информации, возвращенной при пробе (преимущественно, на информации, возвращенной аргументом status)
Чтобы быстрее получать сообщения
Не по порядку
А по готовности сообщений непосредственно

reduce для замера времени





2.1
Каждый процесс вычисляет частичную сумму
(часть площади по кривой)
§ После чего, результаты суммируются
(свойство аддитивности интеграла
Суть распараллеливания - каждый процесс вычисляет часть площади под фигурой между lb и ub
Внешний цикл перебирает.. сравнивает текущую погрешность и необходимую. n-количество прямоугольников, если нет нужной точности
то домножаем на 2


2.2
в srand передаю rank в качестве сида, чтобы измежать одинаковых чисел